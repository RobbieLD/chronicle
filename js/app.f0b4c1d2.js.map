{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./src/components/AddButton.vue?5c8c","webpack:///./src/components/AddMovie.vue?7729","webpack:///./src/components/MainMenu.vue?d14e","webpack:///./src/App.vue?dad9","webpack:///./src/views/Login.vue?eaa4","webpack:///./src/App.vue","webpack:///./src/components/NavBar.vue","webpack:///./src/store/modules/auth.module.ts","webpack:///./src/models/movie-search.ts","webpack:///./src/config/index.ts","webpack:///./src/services/base.service.ts","webpack:///./src/services/movie.service.ts","webpack:///./src/store/modules/base.module.ts","webpack:///./src/store/modules/movies.module.ts","webpack:///./src/services/musical.service.ts","webpack:///./src/models/musical-search.ts","webpack:///./src/store/modules/musicals.modules.ts","webpack:///./src/store/modules/ui.module.ts","webpack:///./src/store/index.ts","webpack:///./src/components/NavBar.vue?a890","webpack:///./src/components/NavBar.vue?ab0f","webpack:///./src/components/MainMenu.vue","webpack:///./src/components/MainMenu.vue?d87e","webpack:///./src/components/MainMenu.vue?89ca","webpack:///./src/components/AddButton.vue","webpack:///./src/components/AddButton.vue?e170","webpack:///./src/components/AddButton.vue?22de","webpack:///./src/App.vue?3acc","webpack:///./src/App.vue?dfb6","webpack:///./src/views/Login.vue","webpack:///./src/util/notify.ts","webpack:///./src/views/Login.vue?e144","webpack:///./src/views/Login.vue?e63b","webpack:///./src/views/Movies.vue","webpack:///./src/components/AddMovie.vue","webpack:///./src/components/AddMovie.vue?e3a2","webpack:///./src/components/AddMovie.vue?08f2","webpack:///./src/views/Movies.vue?c7dc","webpack:///./src/views/Movies.vue?08d1","webpack:///./src/views/Musicals.vue","webpack:///./src/components/AddMusical.vue","webpack:///./src/components/AddMusical.vue?e3f2","webpack:///./src/components/AddMusical.vue?f37b","webpack:///./src/views/Musicals.vue?e8c4","webpack:///./src/views/Musicals.vue?43df","webpack:///./src/components/ItemsList.vue","webpack:///./src/components/Item.vue","webpack:///./src/components/Item.vue?6fd3","webpack:///./src/components/Item.vue?68af","webpack:///./src/components/ItemsList.vue?13d2","webpack:///./src/components/ItemsList.vue?1b72","webpack:///./src/router/index.ts","webpack:///./src/main.ts","webpack:///./src/components/AddMusical.vue?214d","webpack:///./src/components/Item.vue?1fe8","webpack:///./src/components/NavBar.vue?8ee1"],"names":["webpackJsonpCallback","data","moduleId","chunkId","chunkIds","moreModules","executeModules","i","resolves","length","Object","prototype","hasOwnProperty","call","installedChunks","push","modules","parentJsonpFunction","shift","deferredModules","apply","checkDeferredModules","result","deferredModule","fulfilled","j","depId","splice","__webpack_require__","s","installedModules","exports","module","l","m","c","d","name","getter","o","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","p","jsonpArray","window","oldJsonpFunction","slice","class","visible","menuIsOpen","closeMenu","openMenu","$route","fullPath","openAddPanel","position","route","label","logout","userLoggedIn","namespaced","getters","mutations","setUser","this","setError","actions","signIn","authSubscribe","signOut","error","user","state","request","commit","auth","signInWithEmailAndPassword","email","password","response","onAuthStateChanged","baseImageUrl","imageSizes","year","release_date","split","title","rating","vote_average","poster","url","poster_path","width","Number","parseInt","currentYear","Date","getUTCFullYear","years","ToastLifeSpan","PosterHeight","MovieDbKey","VUE_APP_MOVIE_DB_KEY","FirebaseConfig","apiKey","VUE_APP_FIREBASE_API_KEY","authDomain","VUE_APP_FIREBASE_AUTH_DOMAIN","projectId","VUE_APP_FIREBASE_PROJECT_ID","storageBucket","VUE_APP_FIREBASE_STOREAGE_BUCKET","messagingSenderId","VUE_APP_FIREBASE_MESSAGE_SENDER_ID","appId","VUE_APP_FIREBASE_APP_ID","baseUrl","http","a","baseURL","headers","interceptors","use","undefined","Promise","reject","status","message","results","query","getRatedItems","getUnratedItems","loadItems","addItem","updateItem","setItems","items","item","databaseRef","database","ref","dataPath","on","snapshot","val","movie","update","test","keys","filter","reduce","obj","setImageBaseUrl","setImageSizes","loadConfiguration","loadSuggestions","imageBaseUrl","service","Configuration","images","base_url","poster_sizes","Search","map","sizes","description","snippet","loadPoster","_","search","Details","values","pages","thumbnail","setAddPanelOpen","addPanelOpen","open","storeKey","moduleKey","movies","ui","musicals","components","Button","emits","setup","props","emit","router","store","dispatch","render","__scopeId","handleClick","to","NavBar","Sidebar","MainMenu","Toast","AddButton","for","content","id","type","feedback","loggingIn","loading","login","toast","Error","add","severity","summary","detail","life","console","Card","InputText","Password","notify","log","show","addIsOpen","setPanelClosedInStore","closeAddPanel","searchReady","selectedMovie","suggestions","movieSearch","$event","movieSelected","movieCleared","field","invalid","forceSelection","dropdownMode","slotProps","src","itemSelected","size","selectedYear","options","placeholder","saving","save","disabled","AutoComplete","Knob","Dropdown","posterUrl","poasterWidth","myRating","globalRating","event","trim","Years","AddMovie","current","selectedMusical","musicalSearch","musicalSelected","musicalCleared","source","musical","AddMusical","editKey","header","alt","showValue","isEditing","edit","footer","ProgressBar","require","String","required","Item","routes","path","component","Login","Movies","meta","requiresAuth","children","ItemsList","Musicals","history","beforeEach","from","next","matched","some","initializeApp","App","directive","mount"],"mappings":"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","file":"js/app.f0b4c1d2.js","sourcesContent":[" \t// install a JSONP callback for chunk loading\n \tfunction webpackJsonpCallback(data) {\n \t\tvar chunkIds = data[0];\n \t\tvar moreModules = data[1];\n \t\tvar executeModules = data[2];\n\n \t\t// add \"moreModules\" to the modules object,\n \t\t// then flag all \"chunkIds\" as loaded and fire callback\n \t\tvar moduleId, chunkId, i = 0, resolves = [];\n \t\tfor(;i < chunkIds.length; i++) {\n \t\t\tchunkId = chunkIds[i];\n \t\t\tif(Object.prototype.hasOwnProperty.call(installedChunks, chunkId) && installedChunks[chunkId]) {\n \t\t\t\tresolves.push(installedChunks[chunkId][0]);\n \t\t\t}\n \t\t\tinstalledChunks[chunkId] = 0;\n \t\t}\n \t\tfor(moduleId in moreModules) {\n \t\t\tif(Object.prototype.hasOwnProperty.call(moreModules, moduleId)) {\n \t\t\t\tmodules[moduleId] = moreModules[moduleId];\n \t\t\t}\n \t\t}\n \t\tif(parentJsonpFunction) parentJsonpFunction(data);\n\n \t\twhile(resolves.length) {\n \t\t\tresolves.shift()();\n \t\t}\n\n \t\t// add entry modules from loaded chunk to deferred list\n \t\tdeferredModules.push.apply(deferredModules, executeModules || []);\n\n \t\t// run deferred modules when all chunks ready\n \t\treturn checkDeferredModules();\n \t};\n \tfunction checkDeferredModules() {\n \t\tvar result;\n \t\tfor(var i = 0; i < deferredModules.length; i++) {\n \t\t\tvar deferredModule = deferredModules[i];\n \t\t\tvar fulfilled = true;\n \t\t\tfor(var j = 1; j < deferredModule.length; j++) {\n \t\t\t\tvar depId = deferredModule[j];\n \t\t\t\tif(installedChunks[depId] !== 0) fulfilled = false;\n \t\t\t}\n \t\t\tif(fulfilled) {\n \t\t\t\tdeferredModules.splice(i--, 1);\n \t\t\t\tresult = __webpack_require__(__webpack_require__.s = deferredModule[0]);\n \t\t\t}\n \t\t}\n\n \t\treturn result;\n \t}\n\n \t// The module cache\n \tvar installedModules = {};\n\n \t// object to store loaded and loading chunks\n \t// undefined = chunk not loaded, null = chunk preloaded/prefetched\n \t// Promise = chunk loading, 0 = chunk loaded\n \tvar installedChunks = {\n \t\t\"app\": 0\n \t};\n\n \tvar deferredModules = [];\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"/\";\n\n \tvar jsonpArray = window[\"webpackJsonp\"] = window[\"webpackJsonp\"] || [];\n \tvar oldJsonpFunction = jsonpArray.push.bind(jsonpArray);\n \tjsonpArray.push = webpackJsonpCallback;\n \tjsonpArray = jsonpArray.slice();\n \tfor(var i = 0; i < jsonpArray.length; i++) webpackJsonpCallback(jsonpArray[i]);\n \tvar parentJsonpFunction = oldJsonpFunction;\n\n\n \t// add entry module to deferred list\n \tdeferredModules.push([0,\"chunk-vendors\"]);\n \t// run deferred modules when ready\n \treturn checkDeferredModules();\n","export * from \"-!../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--8-oneOf-1-0!../../node_modules/css-loader/dist/cjs.js??ref--8-oneOf-1-1!../../node_modules/vue-loader-v16/dist/stylePostLoader.js!../../node_modules/postcss-loader/src/index.js??ref--8-oneOf-1-2!../../node_modules/sass-loader/dist/cjs.js??ref--8-oneOf-1-3!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader-v16/dist/index.js??ref--0-1!./AddButton.vue?vue&type=style&index=0&id=06ae9748&lang=scss&scoped=true\"","export * from \"-!../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--8-oneOf-1-0!../../node_modules/css-loader/dist/cjs.js??ref--8-oneOf-1-1!../../node_modules/vue-loader-v16/dist/stylePostLoader.js!../../node_modules/postcss-loader/src/index.js??ref--8-oneOf-1-2!../../node_modules/sass-loader/dist/cjs.js??ref--8-oneOf-1-3!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader-v16/dist/index.js??ref--0-1!./AddMovie.vue?vue&type=style&index=0&id=5dcea0ce&lang=scss&scoped=true\"","export * from \"-!../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--8-oneOf-1-0!../../node_modules/css-loader/dist/cjs.js??ref--8-oneOf-1-1!../../node_modules/vue-loader-v16/dist/stylePostLoader.js!../../node_modules/postcss-loader/src/index.js??ref--8-oneOf-1-2!../../node_modules/sass-loader/dist/cjs.js??ref--8-oneOf-1-3!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader-v16/dist/index.js??ref--0-1!./MainMenu.vue?vue&type=style&index=0&id=1d417f1c&lang=scss&scoped=true\"","export * from \"-!../node_modules/mini-css-extract-plugin/dist/loader.js??ref--8-oneOf-1-0!../node_modules/css-loader/dist/cjs.js??ref--8-oneOf-1-1!../node_modules/vue-loader-v16/dist/stylePostLoader.js!../node_modules/postcss-loader/src/index.js??ref--8-oneOf-1-2!../node_modules/sass-loader/dist/cjs.js??ref--8-oneOf-1-3!../node_modules/cache-loader/dist/cjs.js??ref--0-0!../node_modules/vue-loader-v16/dist/index.js??ref--0-1!./App.vue?vue&type=style&index=0&id=0f0e02ea&lang=scss\"","export * from \"-!../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--8-oneOf-1-0!../../node_modules/css-loader/dist/cjs.js??ref--8-oneOf-1-1!../../node_modules/vue-loader-v16/dist/stylePostLoader.js!../../node_modules/postcss-loader/src/index.js??ref--8-oneOf-1-2!../../node_modules/sass-loader/dist/cjs.js??ref--8-oneOf-1-3!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader-v16/dist/index.js??ref--0-1!./Login.vue?vue&type=style&index=0&id=7b88d48e&lang=scss&scoped=true\"","<template>\r\n    <Sidebar v-model:visible=\"menuIsOpen\">\r\n        <main-menu @navigate=\"closeMenu\"></main-menu>\r\n    </Sidebar>\r\n    <nav-bar @menuOpen=\"openMenu\"></nav-bar>\r\n    <div class=\"content grid\">\r\n        <router-view :key=\"$route.fullPath\" />\r\n    </div>\r\n    <add-button @clicked=\"openAddPanel\"></add-button>\r\n    <div class=\"footer\">Created by Rob Davis | Version 1.0</div>\r\n    <Toast position=\"top-right\" />\r\n</template>\r\n<script lang=\"ts\">\r\n    import { defineComponent, onMounted, ref } from 'vue'\r\n    import NavBar from '@/components/NavBar.vue'\r\n    import Sidebar from 'primevue/sidebar'\r\n    import MainMenu from '@/components/MainMenu.vue'\r\n    import Toast from 'primevue/toast'\r\n    import AddButton from '@/components/AddButton.vue'\r\n    import { useStore } from 'vuex'\r\n    import { storeKey } from '@/store'\r\n\r\n    export default defineComponent({\r\n        name: 'App',\r\n        components: {\r\n            NavBar,\r\n            Sidebar,\r\n            MainMenu,\r\n            Toast,\r\n            AddButton,\r\n        },\r\n        setup() {\r\n            const menuIsOpen = ref(false)\r\n            const store = useStore(storeKey)\r\n\r\n            const openAddPanel = () => {\r\n                store.commit('ui/setAddPanelOpen', true)\r\n            }\r\n\r\n            const openMenu = () => {\r\n                menuIsOpen.value = true\r\n            }\r\n\r\n            const closeMenu = () => {\r\n                menuIsOpen.value = false\r\n            }\r\n\r\n            onMounted(() => {\r\n                store.dispatch('auth/authSubscribe')\r\n            })\r\n\r\n            return {\r\n                menuIsOpen,\r\n                openMenu,\r\n                closeMenu,\r\n                openAddPanel,\r\n            }\r\n        },\r\n    })\r\n</script>\r\n<style lang=\"scss\">\r\n    html,\r\n    body {\r\n        font-size: 14px;\r\n        font-family: var(--font-family);\r\n        margin: 0;\r\n        padding: 0;\r\n        height: 100%;\r\n        background-attachment: fixed;\r\n        background-size: cover;\r\n        background-image: url('https://images.unsplash.com/photo-1549074862-6173e20d02a8?ixlib=rb-1.2.1&ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&auto=format&fit=crop&w=2700&q=80');\r\n    }\r\n\r\n    #app {\r\n        display: flex;\r\n        flex-direction: column;\r\n        height: 100%;\r\n    }\r\n\r\n    .grid {\r\n        margin-right: 0 !important;\r\n        margin-left: 0 !important;\r\n    }\r\n\r\n    .content {\r\n        padding: 0.5em;\r\n    }\r\n\r\n    .p-sidebar-content {\r\n        height: 100%;\r\n    }\r\n\r\n    .footer {\r\n        color: var(--surface-0);\r\n        bottom: 0;\r\n        position: fixed;\r\n        padding: 0.5em;\r\n        display: flex;\r\n        flex-grow: 1;\r\n        align-items: flex-end;\r\n        font-size: 0.8em;\r\n    }\r\n</style>\r\n","<template>\r\n    <div class=\"grid shadow-3 nav\">\r\n        <div class=\"col-fixed nav__burger\">\r\n            <i class=\"pi pi-bars\" @click=\"openMenu\"></i>\r\n        </div>\r\n        <div class=\"col-fixed nav__title\">\r\n            <span >{{ route.name }} </span>\r\n        </div>\r\n        <div class=\"col nav__user\">\r\n            <Button v-show=\"userLoggedIn\" label=\"Logout\" @click=\"logout\" />\r\n        </div>\r\n    </div>\r\n</template>\r\n<script lang='ts'>\r\n    import { computed, defineComponent, ref } from 'vue'\r\n    import { useRoute, useRouter } from 'vue-router'\r\n    import Button from 'primevue/button'\r\n    import 'firebase/auth'\r\n    import { useStore } from 'vuex'\r\n    import { storeKey } from '@/store'\r\n    \r\n    export default defineComponent({\r\n        name: 'NavBar',\r\n        components: {\r\n            Button\r\n        },\r\n        emits: ['menuOpen'],\r\n        setup(props, { emit }) {\r\n            const route = useRoute()\r\n            const title = ref(route.name)\r\n            const router = useRouter()\r\n            const store = useStore(storeKey)\r\n            const userLoggedIn = computed(() => store.state.auth.user !== null)\r\n            \r\n            const openMenu = () => {\r\n                emit('menuOpen')\r\n            }\r\n\r\n            const logout = async () => {\r\n                await store.dispatch('auth/signOut')\r\n                router.push('/')\r\n            }\r\n\r\n            return {\r\n                openMenu,\r\n                logout,\r\n                title,\r\n                route,\r\n                userLoggedIn\r\n            }\r\n        },\r\n    })\r\n</script>\r\n<style lang='scss' scoped>\r\n    .nav {\r\n        background-color: var(--surface-900);\r\n        color: var(--surface-0);\r\n\r\n        &__burger {\r\n            display: flex;\r\n            align-items: center;\r\n            background-color: var(--primary-color);\r\n            color: var(--primary-color-text);\r\n            cursor: pointer;\r\n            padding: 1em;\r\n            padding-top: 1.5em;\r\n\r\n            i {\r\n                font-size: 2em;\r\n            }\r\n        }\r\n\r\n        &__title {\r\n            font-size: 2em;\r\n            padding-top: 0.5em;\r\n        }\r\n\r\n        &__user {\r\n            align-self: center;\r\n            display: flex;\r\n            justify-content: flex-end;\r\n            margin-right: 0.5em;\r\n        }\r\n\r\n    }\r\n</style>\r\n","import { ActionContext, ActionTree, GetterTree, Module, MutationTree } from 'vuex'\r\nimport RootState from '../states/root.state'\r\nimport AuthState from '../states/auth.state'\r\nimport firebase from 'firebase/app'\r\n\r\nexport default class AuthModule implements Module<AuthState, RootState> {  \r\n    \r\n    public state(): AuthState {\r\n        return {\r\n            error: null,\r\n            user: null\r\n        }\r\n    }\r\n\r\n    public namespaced?: boolean = true\r\n\r\n    public getters: GetterTree<AuthState, RootState> = {\r\n        \r\n    }\r\n\r\n    public mutations: MutationTree<AuthState> = {\r\n        setUser: this.setUser,\r\n        setError: this.setError\r\n    }\r\n\r\n    public actions: ActionTree<AuthState, RootState> = {\r\n        signIn: this.signIn,\r\n        authSubscribe: this.authSubscribe,\r\n        signOut: this.signOut\r\n    }\r\n\r\n    // Mutations\r\n    private setUser (state: AuthState, user: firebase.User | null): void {\r\n        state.user = user\r\n    }\r\n    \r\n    private setError (state: AuthState, error: Error | null): void {\r\n        state.error = error\r\n    }\r\n\r\n    // Actions\r\n    private async signIn ({ commit }: ActionContext<AuthState, RootState>, request: { email: string, password: string }): Promise<void> {\r\n        try {\r\n            const response = await firebase.auth().signInWithEmailAndPassword(request.email, request.password)\r\n            commit('setUser', response.user)\r\n            commit('setError', null)\r\n        } catch(error) {\r\n            commit('setError', error)\r\n        }\r\n    }\r\n    \r\n    private authSubscribe ({ commit }: ActionContext<AuthState, RootState>): void {\r\n        firebase.auth().onAuthStateChanged(user => commit('setUser', user))\r\n    }\r\n    \r\n    private async signOut ({ commit }: ActionContext<AuthState, RootState>): Promise<void> {\r\n        await firebase\r\n          .auth()\r\n          .signOut()\r\n        commit('setUser', null)\r\n      }    \r\n}\r\n","interface Result {\r\n    adult: boolean;\r\n    backdrop_path: string;\r\n    genre_ids: number[];\r\n    id: number;\r\n    original_language: string;\r\n    original_title: string;\r\n    overview: string;\r\n    popularity: number;\r\n    poster_path: string;\r\n    release_date: string;\r\n    title: string;\r\n    video: boolean;\r\n    vote_average: number;\r\n    vote_count: number;\r\n}\r\n\r\ninterface MovieImage {\r\n    url: string,\r\n    width: number\r\n}\r\n\r\nexport default class MovieSuggestion {\r\n    public name: string\r\n    public poster: MovieImage\r\n    public rating: number\r\n    constructor(result: Result, baseImageUrl: string, imageSizes: string[]) {\r\n        let year = '0'\r\n        \r\n        if (result.release_date) {\r\n            year = result.release_date?.split('-')[0]\r\n        }\r\n        \r\n        this.name = `${result.title} (${year})`\r\n        this.rating = result.vote_average * 10\r\n        this.poster = {\r\n            url: `${baseImageUrl}/${imageSizes[2]}/${result.poster_path}`,\r\n            width: Number.parseInt(imageSizes[2].split('w')[1])\r\n        }\r\n    }\r\n}\r\n\r\nexport default interface MovieSearchResult {\r\n    page: number;\r\n    results: Result[];\r\n    total_pages: number;\r\n    total_results: number;\r\n}\r\n","export default class ChronicleConfig {\r\n    public static ToastLifeSpan = 5000\r\n    public static PosterHeight = 400\r\n    \r\n    public static Years() : number[] {\r\n        let currentYear = new Date().getUTCFullYear()\r\n        const years = []\r\n        \r\n        while(currentYear > 2014) {\r\n            years.push(currentYear)\r\n            currentYear--\r\n        }\r\n\r\n        return years\r\n    }\r\n\r\n    public static MovieDbKey = process.env?.VUE_APP_MOVIE_DB_KEY\r\n    public static FirebaseConfig: Record<string, string> = {\r\n        apiKey: process.env?.VUE_APP_FIREBASE_API_KEY,\r\n        authDomain: process.env?.VUE_APP_FIREBASE_AUTH_DOMAIN,\r\n        projectId: process.env?.VUE_APP_FIREBASE_PROJECT_ID,\r\n        storageBucket: process.env?.VUE_APP_FIREBASE_STOREAGE_BUCKET,\r\n        messagingSenderId: process.env?.VUE_APP_FIREBASE_MESSAGE_SENDER_ID,\r\n        appId: process.env?.VUE_APP_FIREBASE_APP_ID\r\n    }\r\n}\r\n","import axios, { AxiosError, AxiosInstance } from 'axios'\r\nimport ChronicleConfig from '@/config'\r\n\r\nexport default abstract class BaseService {\r\n    public http: AxiosInstance;\r\n\r\n    constructor(baseUrl: string) {\r\n        this.http = axios.create({\r\n            baseURL: baseUrl,\r\n            headers: {\r\n                'Content-type': 'application/json; charset=UTF-8',\r\n            },\r\n        })\r\n\r\n        // Hook up the error handler\r\n        this.http.interceptors.response.use(undefined, (error: AxiosError) => {\r\n            return Promise.reject({ name: error.response?.status || error.name, message: error.response?.data || error.message })\r\n        })\r\n    }\r\n\r\n}\r\n","import ChronicleConfig from '@/config'\r\nimport MovieConfiguration from '@/models/movie-configuration'\r\nimport MovieSearchResult from '@/models/movie-search'\r\nimport BaseService from './base.service'\r\n\r\nexport default class MovieService extends BaseService {\r\n    constructor() {\r\n        super('https://api.themoviedb.org/3/')\r\n    }\r\n\r\n    public async Configuration(): Promise<MovieConfiguration> {\r\n        const results = await this.http.get<MovieConfiguration>(`configuration?api_key=${ChronicleConfig.MovieDbKey}`)\r\n        return results.data\r\n    }\r\n\r\n    public async Search(query: string): Promise<MovieSearchResult> {\r\n        const results = await this.http.get<MovieSearchResult>(`search/movie?api_key=${ChronicleConfig.MovieDbKey}&language=en-US&query='${query}'&page=1&include_adult=false`)\r\n        return results.data\r\n    }\r\n}\r\n","import ItemData from '@/models/item'\r\nimport firebase from 'firebase/app'\r\nimport { ActionContext, ActionTree, GetterTree, Module, MutationTree } from 'vuex'\r\nimport BaseState from '../states/base.state'\r\nimport RootState from '../states/root.state'\r\n\r\n// Note because of the way the vuex store works I can't find a way to have instance variables\r\n// in this class which are still avaliable to the methods at run time. That's why the filter\r\n// method is not part of the class\r\nexport default abstract class BaseModule<T extends BaseState> implements Module<T, RootState> {\r\n    public namespaced?: boolean = true\r\n\r\n    public abstract state(): T\r\n\r\n    public abstract getters: GetterTree<T, RootState> = {\r\n        getRatedItems: this.getRatedItems,\r\n        getUnratedItems: this.getUnratedItems\r\n    }\r\n\r\n\r\n    public abstract actions: ActionTree<T, RootState> = {\r\n        loadItems: this.loadItems,\r\n        addItem: this.addItem,\r\n        updateItem: this.updateItem\r\n    }\r\n\r\n    public abstract mutations: MutationTree<T> = {\r\n        setItems: this.setItems\r\n    }\r\n\r\n    // Getters\r\n    private getRatedItems(state: T): Record<string, ItemData> {\r\n        if (state.items) {\r\n            return filtered(state, (item) => item.year > 0)\r\n        } else {\r\n            return {}\r\n        }\r\n    }\r\n\r\n    private getUnratedItems(state: T): Record<string, ItemData> {\r\n        if (state.items) {\r\n            return filtered(state, (item) => item.year === 0)\r\n        } else {\r\n            return {}\r\n        }\r\n    }\r\n\r\n    // Mutations\r\n    private setItems(state: T, items: Record<string, ItemData>): void {\r\n        state.items = items\r\n    }\r\n\r\n    // Actions\r\n    private async loadItems({ state, commit }: ActionContext<T, RootState>): Promise<void> {\r\n        const databaseRef = firebase.database().ref(state.dataPath)\r\n        databaseRef.on('value', (snapshot) => {\r\n            commit('setItems', snapshot.val())\r\n        })\r\n    }\r\n\r\n    private async addItem({ state }: ActionContext<T, RootState>, movie: ItemData): Promise<void> {\r\n        const databaseRef = firebase.database().ref(state.dataPath)\r\n        await databaseRef.push(movie)\r\n    }\r\n\r\n    private async updateItem({ state }: ActionContext<T, RootState>, request: { item: ItemData, key: string }): Promise<void> {\r\n        const databaseRef = firebase.database().ref(state.dataPath)\r\n        state.items[request.key] = request.item\r\n        await databaseRef.update(state.items)\r\n    }\r\n}\r\n\r\n\r\n// Helpers\r\nconst filtered = <T extends BaseState>(state: T, test: (item: ItemData) => boolean) => {\r\n    return Object.keys(state.items)\r\n        .filter(key => test(state.items[key]))\r\n        .reduce((obj, key) => {\r\n            return {\r\n                ...obj,\r\n                [key]: state.items[key]\r\n            }\r\n        }, {})\r\n}\r\n","import { ActionContext, ActionTree, GetterTree, MutationTree } from 'vuex'\r\nimport RootState from '../states/root.state'\r\nimport MovieState from '../states/movies.state'\r\nimport MovieSuggestion from '@/models/movie-search'\r\nimport MovieService from '@/services/movie.service'\r\nimport BaseModule from './base.module'\r\n\r\nexport default class MovieModule extends BaseModule<MovieState> {\r\n    \r\n    public state(): MovieState {\r\n        return {\r\n            items: {},\r\n            imageBaseUrl: '',\r\n            imageSizes: [],\r\n            dataPath: '/movies'\r\n        }\r\n    }\r\n\r\n    public getters: GetterTree<MovieState, RootState> = {\r\n        ...this.getters\r\n    }\r\n\r\n    public mutations: MutationTree<MovieState> = {\r\n        ...this.mutations,\r\n        setImageBaseUrl: this.setImageBaseUrl,\r\n        setImageSizes: this.setImageSizes\r\n    }\r\n\r\n    public actions: ActionTree<MovieState, RootState> = {\r\n        ...this.actions,\r\n        loadConfiguration: this.loadConfiguration,\r\n        loadSuggestions: this.loadSuggestions\r\n    }\r\n\r\n\r\n    // Actions\r\n    private async loadConfiguration({ commit }: ActionContext<MovieState, RootState>): Promise<void> {\r\n        const service = new MovieService()\r\n        const results = await service.Configuration()\r\n        commit('setImageBaseUrl', results.images.base_url)\r\n        commit('setImageSizes', results.images.poster_sizes)\r\n    }\r\n\r\n    private async loadSuggestions({ state }: ActionContext<MovieState, RootState>, query: string): Promise<MovieSuggestion[]> {\r\n        const service = new MovieService()\r\n        const results = await service.Search(query)\r\n        // No need to store this as we're only using it for generating the drop down\r\n        return results.results.map<MovieSuggestion>((r) => new MovieSuggestion(r, state.imageBaseUrl, state.imageSizes))\r\n    }\r\n\r\n    // Mutations\r\n    private setImageBaseUrl(state: MovieState, url: string): void {\r\n        state.imageBaseUrl = url\r\n    }\r\n\r\n    private setImageSizes(state: MovieState, sizes: string[]): void {\r\n        state.imageSizes = sizes\r\n    }\r\n}\r\n","import ChronicleConfig from '@/config'\r\nimport MusicalPoster from '@/models/musical-poster'\r\nimport MusicalSearchResult from '@/models/musical-search'\r\nimport BaseService from './base.service'\r\n\r\nexport default class MusicalService extends BaseService {\r\n    constructor() {\r\n        super('https://en.wikipedia.org')\r\n    }\r\n\r\n    public async Search(query: string): Promise<MusicalSearchResult> {\r\n        const results = await this.http.get<MusicalSearchResult>(`w/api.php?origin=*&action=query&list=search&prop=info&srsearch=${query}&format=json`)\r\n        return results.data\r\n    }\r\n\r\n    public async Details(title: string): Promise<MusicalPoster> {\r\n        const results = await this.http.get<MusicalPoster>(`w/api.php?origin=*&action=query&titles=${title}&prop=pageimages&format=json&pithumbsize=${ChronicleConfig.PosterHeight}&pilicense=any`)\r\n        return results.data\r\n    }\r\n}\r\n","export interface Continue {\r\n    sroffset: number;\r\n    continue: string;\r\n}\r\n\r\nexport interface Searchinfo {\r\n    totalhits: number;\r\n}\r\n\r\nexport interface Search {\r\n    ns: number;\r\n    title: string;\r\n    pageid: number;\r\n    size: number;\r\n    wordcount: number;\r\n    snippet: string;\r\n    timestamp: Date;\r\n}\r\n\r\nexport interface Query {\r\n    searchinfo: Searchinfo;\r\n    search: Search[];\r\n}\r\n\r\nexport default interface MusicalSearchResult {\r\n    batchcomplete: string;\r\n    continue: Continue;\r\n    query: Query;\r\n}\r\n\r\nexport default class MusicalSuggestion {\r\n    public title: string\r\n    public description: string\r\n    constructor(result: Search) {\r\n        this.title = result.title\r\n        this.description = result.snippet\r\n    }\r\n}\r\n","import { ActionContext, ActionTree, GetterTree, MutationTree } from 'vuex'\r\nimport RootState from '../states/root.state'\r\nimport MusicalState from '../states/musicals.state'\r\nimport MusicalService from '@/services/musical.service'\r\nimport { Thumbnail } from '@/models/musical-poster'\r\nimport MusicalSuggestion from '@/models/musical-search'\r\nimport BaseModule from './base.module'\r\n\r\nexport default class MusicalModule extends BaseModule<MusicalState> {    \r\n        \r\n    public state(): MusicalState {\r\n        return {\r\n            items: {},\r\n            dataPath: '/musicals'\r\n        }\r\n    }\r\n\r\n    public getters: GetterTree<MusicalState, RootState> = {\r\n        ...this.getters\r\n    }\r\n\r\n    public mutations: MutationTree<MusicalState> = {\r\n        ...this.mutations,\r\n    }\r\n\r\n    public actions: ActionTree<MusicalState, RootState> = {\r\n        ...this.actions,\r\n        loadPoster: this.loadPoster,\r\n        loadSuggestions: this.loadSuggestions\r\n    }\r\n\r\n    private async loadSuggestions (_: ActionContext<MusicalState, RootState>, query: string): Promise<MusicalSuggestion[]> {\r\n        const service = new MusicalService()\r\n        const results = await service.Search(query)\r\n        return results.query.search.map<MusicalSuggestion>(r => new MusicalSuggestion(r))\r\n    }\r\n    \r\n    private async loadPoster (_: ActionContext<MusicalState, RootState>, title: string): Promise<Thumbnail> {\r\n        const service = new MusicalService()\r\n        const results = await service.Details(title)\r\n        return Object.values(results.query.pages)[0].thumbnail\r\n    }\r\n    \r\n\r\n}\r\n","import { ActionTree, GetterTree, Module, MutationTree } from 'vuex'\r\nimport RootState from '../states/root.state'\r\nimport UIState from '../states/ui.state'\r\n\r\nexport default class UIModule implements Module<UIState, RootState> {    \r\n\r\n    public state(): UIState {\r\n        return {\r\n            addPanelOpen: false\r\n        }\r\n    }\r\n\r\n    public namespaced?: boolean = true\r\n\r\n    public getters: GetterTree<UIState, RootState> = {\r\n        \r\n    }\r\n\r\n    public mutations: MutationTree<UIState> = {\r\n        setAddPanelOpen: this.setAddPanelOpen\r\n    }\r\n\r\n    public actions: ActionTree<UIState, RootState> = {\r\n        \r\n    }\r\n\r\n    // Mutations\r\n    private setAddPanelOpen (state: UIState, open: boolean): void {\r\n        state.addPanelOpen = open\r\n    }\r\n}\r\n","import { InjectionKey } from 'vue'\nimport { createStore, Store } from 'vuex'\nimport AuthModule from './modules/auth.module'\nimport MovieModule from './modules/movies.module'\nimport MusicalModule from './modules/musicals.modules'\nimport UIModule from './modules/ui.module'\nimport RootState from './states/root.state'\n\nexport const storeKey: InjectionKey<Store<RootState>> = Symbol('store')\nexport const moduleKey: InjectionKey<string> = Symbol('module')\n\nexport const store = createStore<RootState>({\n    modules: {\n        auth: new AuthModule(),\n        movies: new MovieModule(),\n        ui: new UIModule(),\n        musicals: new MusicalModule()\n    }\n})\n","\r\n    import { computed, defineComponent, ref } from 'vue'\r\n    import { useRoute, useRouter } from 'vue-router'\r\n    import Button from 'primevue/button'\r\n    import 'firebase/auth'\r\n    import { useStore } from 'vuex'\r\n    import { storeKey } from '@/store'\r\n    \r\n    export default defineComponent({\r\n        name: 'NavBar',\r\n        components: {\r\n            Button\r\n        },\r\n        emits: ['menuOpen'],\r\n        setup(props, { emit }) {\r\n            const route = useRoute()\r\n            const title = ref(route.name)\r\n            const router = useRouter()\r\n            const store = useStore(storeKey)\r\n            const userLoggedIn = computed(() => store.state.auth.user !== null)\r\n            \r\n            const openMenu = () => {\r\n                emit('menuOpen')\r\n            }\r\n\r\n            const logout = async () => {\r\n                await store.dispatch('auth/signOut')\r\n                router.push('/')\r\n            }\r\n\r\n            return {\r\n                openMenu,\r\n                logout,\r\n                title,\r\n                route,\r\n                userLoggedIn\r\n            }\r\n        },\r\n    })\r\n","import { render } from \"./NavBar.vue?vue&type=template&id=00f7ffbe&scoped=true\"\nimport script from \"./NavBar.vue?vue&type=script&lang=ts\"\nexport * from \"./NavBar.vue?vue&type=script&lang=ts\"\n\nimport \"./NavBar.vue?vue&type=style&index=0&id=00f7ffbe&lang=scss&scoped=true\"\nscript.render = render\nscript.__scopeId = \"data-v-00f7ffbe\"\n\nexport default script","<template>\r\n    <div class=\"menu-header\">Movies</div>\r\n    <router-link\r\n        v-on:click=\"handleClick\"\r\n        key=\"/movies/history\"\r\n        class=\"menu-item\"\r\n        to=\"/movies/history\"\r\n        >History</router-link\r\n    >\r\n    <router-link\r\n        v-on:click=\"handleClick\"\r\n        key=\"/movies/watch\"\r\n        class=\"menu-item\"\r\n        to=\"/movies/watch\"\r\n        >Watch List</router-link\r\n    >\r\n    <div class=\"menu-header\">Musicals</div>\r\n    <router-link\r\n        v-on:click=\"handleClick\"\r\n        key=\"/musicals/history\"\r\n        class=\"menu-item\"\r\n        to=\"/musicals/history\"\r\n        >History</router-link\r\n    >\r\n    <router-link\r\n        v-on:click=\"handleClick\"\r\n        key=\"/musicals/listen\"\r\n        class=\"menu-item\"\r\n        to=\"/musicals/listen\"\r\n        >Listen List</router-link\r\n    >\r\n</template>\r\n<script lang='ts'>\r\n    import { defineComponent } from 'vue'\r\n    export default defineComponent({\r\n        name: 'MainMenu',\r\n        components: {},\r\n        emits: ['navigate'],\r\n        setup(props, { emit }) {\r\n            const handleClick = () => {\r\n                emit('navigate')\r\n            }\r\n\r\n            return {\r\n                handleClick,\r\n            }\r\n        },\r\n    })\r\n</script>\r\n<style lang='scss' scoped>\r\n    .router-link-active {\r\n        color: var(--primary-color) !important;\r\n    }\r\n\r\n\r\n    .menu-item, .menu-header {\r\n        padding-left: 0.5em;\r\n        padding-bottom: 0.3em;\r\n        font-size: 2em;\r\n        display: flex;\r\n        align-items: center;\r\n        justify-content: space-between;\r\n        color: var(--surface-900);\r\n        text-decoration: none;\r\n    }\r\n\r\n    .menu-header {\r\n        margin-top: 1em;\r\n        font-weight: bold;\r\n    }\r\n\r\n    .menu-item {\r\n        padding-left: 1em;\r\n        &:hover {\r\n            color: var(--primary-color);\r\n        }\r\n    }\r\n</style>\r\n","\r\n    import { defineComponent } from 'vue'\r\n    export default defineComponent({\r\n        name: 'MainMenu',\r\n        components: {},\r\n        emits: ['navigate'],\r\n        setup(props, { emit }) {\r\n            const handleClick = () => {\r\n                emit('navigate')\r\n            }\r\n\r\n            return {\r\n                handleClick,\r\n            }\r\n        },\r\n    })\r\n","import { render } from \"./MainMenu.vue?vue&type=template&id=1d417f1c&scoped=true\"\nimport script from \"./MainMenu.vue?vue&type=script&lang=ts\"\nexport * from \"./MainMenu.vue?vue&type=script&lang=ts\"\n\nimport \"./MainMenu.vue?vue&type=style&index=0&id=1d417f1c&lang=scss&scoped=true\"\nscript.render = render\nscript.__scopeId = \"data-v-1d417f1c\"\n\nexport default script","<template>\r\n    <div class=\"add-button\" @click=\"open\">\r\n        <i class=\"pi pi-plus add-button__icon\"></i>\r\n    </div>\r\n</template>\r\n<script lang='ts'>\r\n    import { defineComponent } from 'vue'\r\n\r\n    export default defineComponent({\r\n        name: 'AddButton',\r\n        components: {},\r\n        emits: ['clicked'],\r\n        setup(props, { emit }) {\r\n            const open = () => {\r\n                emit('clicked')\r\n            }\r\n            return {\r\n                open\r\n            }\r\n        },\r\n    })\r\n</script>\r\n<style lang='scss' scoped>\r\n    .add-button {\r\n        right: 0;\r\n        top: 30%;\r\n        position: fixed;\r\n        z-index: 1;\r\n        border-bottom-left-radius: 0.2em;\r\n        border-top-left-radius: 0.2em;\r\n        color: var(--primary-color-text);\r\n        background-color: var(--primary-color);\r\n        padding: 1em;\r\n        box-shadow: 5px 10px 18px #0000006b;\r\n        cursor: pointer;\r\n\r\n        &__icon {\r\n            font-size: 2em;\r\n        }\r\n    }\r\n</style>\r\n","\r\n    import { defineComponent } from 'vue'\r\n\r\n    export default defineComponent({\r\n        name: 'AddButton',\r\n        components: {},\r\n        emits: ['clicked'],\r\n        setup(props, { emit }) {\r\n            const open = () => {\r\n                emit('clicked')\r\n            }\r\n            return {\r\n                open\r\n            }\r\n        },\r\n    })\r\n","import { render } from \"./AddButton.vue?vue&type=template&id=06ae9748&scoped=true\"\nimport script from \"./AddButton.vue?vue&type=script&lang=ts\"\nexport * from \"./AddButton.vue?vue&type=script&lang=ts\"\n\nimport \"./AddButton.vue?vue&type=style&index=0&id=06ae9748&lang=scss&scoped=true\"\nscript.render = render\nscript.__scopeId = \"data-v-06ae9748\"\n\nexport default script","\r\n    import { defineComponent, onMounted, ref } from 'vue'\r\n    import NavBar from '@/components/NavBar.vue'\r\n    import Sidebar from 'primevue/sidebar'\r\n    import MainMenu from '@/components/MainMenu.vue'\r\n    import Toast from 'primevue/toast'\r\n    import AddButton from '@/components/AddButton.vue'\r\n    import { useStore } from 'vuex'\r\n    import { storeKey } from '@/store'\r\n\r\n    export default defineComponent({\r\n        name: 'App',\r\n        components: {\r\n            NavBar,\r\n            Sidebar,\r\n            MainMenu,\r\n            Toast,\r\n            AddButton,\r\n        },\r\n        setup() {\r\n            const menuIsOpen = ref(false)\r\n            const store = useStore(storeKey)\r\n\r\n            const openAddPanel = () => {\r\n                store.commit('ui/setAddPanelOpen', true)\r\n            }\r\n\r\n            const openMenu = () => {\r\n                menuIsOpen.value = true\r\n            }\r\n\r\n            const closeMenu = () => {\r\n                menuIsOpen.value = false\r\n            }\r\n\r\n            onMounted(() => {\r\n                store.dispatch('auth/authSubscribe')\r\n            })\r\n\r\n            return {\r\n                menuIsOpen,\r\n                openMenu,\r\n                closeMenu,\r\n                openAddPanel,\r\n            }\r\n        },\r\n    })\r\n","import { render } from \"./App.vue?vue&type=template&id=0f0e02ea\"\nimport script from \"./App.vue?vue&type=script&lang=ts\"\nexport * from \"./App.vue?vue&type=script&lang=ts\"\n\nimport \"./App.vue?vue&type=style&index=0&id=0f0e02ea&lang=scss\"\nscript.render = render\n\nexport default script","/* eslint-disable no-undef */\r\n<template>\r\n    <Card class=\"login\">\r\n        <template #title> Login </template>\r\n        <template #content>\r\n            <div>\r\n                <div class=\"field grid\">\r\n                    <label for=\"email\" class=\"col-fixed login__label\"\r\n                        >Email</label\r\n                    >\r\n                    <div class=\"col\">\r\n                        <InputText id=\"email\" type=\"username\" v-model=\"email\" />\r\n                    </div>\r\n                </div>\r\n                <div class=\"field grid\">\r\n                    <label for=\"password\" class=\"col-fixed login__label\"\r\n                        >Password</label\r\n                    >\r\n                    <div class=\"col\">\r\n                        <Password\r\n                            v-model=\"password\"\r\n                            :feedback=\"false\"\r\n                        ></Password>\r\n                    </div>\r\n                </div>\r\n                <div class=\"field grid\">\r\n                    <div class=\"col-fixed login__label\"></div>\r\n                    <div class=\"col\">\r\n                        <Button\r\n                            type=\"button\"\r\n                            :label=\"loggingIn ? 'Authenticating' : 'Login'\"\r\n                            :loading=\"loggingIn\"\r\n                            @click=\"login\"\r\n                        />\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </template>\r\n    </Card>\r\n</template>\r\n<script lang='ts'>\r\n    import { defineComponent, onMounted, ref, watch } from 'vue'\r\n    import Card from 'primevue/card'\r\n    import InputText from 'primevue/inputtext'\r\n    import Password from 'primevue/password'\r\n    import Button from 'primevue/button'\r\n    import { useRouter } from 'vue-router'\r\n    import Notify from '@/util/notify'\r\n    import { useStore } from 'vuex'\r\n    import { storeKey } from '@/store'\r\n\r\n    export default defineComponent({\r\n        name: 'Login',\r\n        components: {\r\n            Card,\r\n            InputText,\r\n            Password,\r\n            Button,\r\n        },\r\n        setup() {\r\n            const router = useRouter()\r\n            const password = ref('password')\r\n            const email = ref('me@robdavis.dev')\r\n            const loggingIn = ref(false)\r\n            const notify = new Notify()\r\n            const store = useStore(storeKey)\r\n\r\n            onMounted(() => {\r\n                console.log(store)\r\n            })\r\n            \r\n            const login = async () => {\r\n                loggingIn.value = true\r\n                await store.dispatch('auth/signIn', { email: email.value, password: password.value })\r\n                loggingIn.value = false\r\n            }\r\n\r\n            watch(() => store.state.auth.user, (user) => {\r\n                if (user) {\r\n                    router.push({ name: 'Movie History'})\r\n                }\r\n            })\r\n\r\n            watch(() => store.state.auth.error, (error) => {\r\n                if (error) {\r\n                    notify.show(error)\r\n                }\r\n            })\r\n\r\n            return {\r\n                password,\r\n                email,\r\n                loggingIn,\r\n                login,\r\n            }\r\n        },\r\n    })\r\n</script>\r\n<style lang='scss' scoped>\r\n    .login {\r\n        width: fit-content;\r\n        margin-left: auto;\r\n        margin-right: auto;\r\n        margin-top: 10em;\r\n        &__label {\r\n            width: 6em;\r\n        }\r\n    }\r\n</style>\r\n","import ChronicleConfig from '@/config'\r\nimport { useToast } from 'primevue/usetoast'\r\nexport default class Notify {\r\n\r\n    private toast\r\n\r\n    constructor() {\r\n        this.toast = useToast()\r\n    }\r\n\r\n    public show(content: Error | string): void {\r\n        if (content instanceof Error) {\r\n            this.toast.add({ severity: 'error', summary: content.name, detail: content.message, life: ChronicleConfig.ToastLifeSpan })\r\n            // Add the error to the console for debugging purposes \r\n            console.error(content)\r\n        } else {\r\n            this.toast.add({ severity: 'warn', summary: 'Warning', detail: content, life: ChronicleConfig.ToastLifeSpan })\r\n        }\r\n    }\r\n}\r\n","\r\n    import { defineComponent, onMounted, ref, watch } from 'vue'\r\n    import Card from 'primevue/card'\r\n    import InputText from 'primevue/inputtext'\r\n    import Password from 'primevue/password'\r\n    import Button from 'primevue/button'\r\n    import { useRouter } from 'vue-router'\r\n    import Notify from '@/util/notify'\r\n    import { useStore } from 'vuex'\r\n    import { storeKey } from '@/store'\r\n\r\n    export default defineComponent({\r\n        name: 'Login',\r\n        components: {\r\n            Card,\r\n            InputText,\r\n            Password,\r\n            Button,\r\n        },\r\n        setup() {\r\n            const router = useRouter()\r\n            const password = ref('password')\r\n            const email = ref('me@robdavis.dev')\r\n            const loggingIn = ref(false)\r\n            const notify = new Notify()\r\n            const store = useStore(storeKey)\r\n\r\n            onMounted(() => {\r\n                console.log(store)\r\n            })\r\n            \r\n            const login = async () => {\r\n                loggingIn.value = true\r\n                await store.dispatch('auth/signIn', { email: email.value, password: password.value })\r\n                loggingIn.value = false\r\n            }\r\n\r\n            watch(() => store.state.auth.user, (user) => {\r\n                if (user) {\r\n                    router.push({ name: 'Movie History'})\r\n                }\r\n            })\r\n\r\n            watch(() => store.state.auth.error, (error) => {\r\n                if (error) {\r\n                    notify.show(error)\r\n                }\r\n            })\r\n\r\n            return {\r\n                password,\r\n                email,\r\n                loggingIn,\r\n                login,\r\n            }\r\n        },\r\n    })\r\n","import { render } from \"./Login.vue?vue&type=template&id=7b88d48e&scoped=true\"\nimport script from \"./Login.vue?vue&type=script&lang=ts\"\nexport * from \"./Login.vue?vue&type=script&lang=ts\"\n\nimport \"./Login.vue?vue&type=style&index=0&id=7b88d48e&lang=scss&scoped=true\"\nscript.render = render\nscript.__scopeId = \"data-v-7b88d48e\"\n\nexport default script","<template>\r\n    <router-view></router-view>\r\n    <Sidebar v-model:visible=\"addIsOpen\" position=\"full\" @hide=\"setPanelClosedInStore\">\r\n        <add-movie @saved=\"closeAddPanel\"></add-movie>\r\n    </Sidebar>\r\n</template>\r\n<script lang='ts'>\r\n    import { defineComponent, provide, onMounted, watch, ref } from 'vue'\r\n    import { useStore } from 'vuex'\r\n    import { moduleKey, storeKey } from '@/store'\r\n    import Sidebar from 'primevue/sidebar'\r\n    import AddMovie from '@/components/AddMovie.vue'\r\n\r\n    export default defineComponent({\r\n        name: 'Movies',\r\n        components: {\r\n            Sidebar,\r\n            AddMovie\r\n        },\r\n        setup() {\r\n            const store = useStore(storeKey)\r\n            provide(moduleKey, 'movies')\r\n            const addIsOpen = ref(false)\r\n            onMounted(() => {\r\n                store.dispatch('movies/loadItems')\r\n            })\r\n\r\n            const setPanelClosedInStore = () => {\r\n                store.commit('ui/setAddPanelOpen', false)\r\n            }\r\n\r\n            const closeAddPanel = () => {\r\n                setPanelClosedInStore()\r\n            }\r\n\r\n            watch(() => store.state.ui.addPanelOpen, (current) => {\r\n                addIsOpen.value = current\r\n            })\r\n\r\n            return {\r\n                addIsOpen,\r\n                closeAddPanel,\r\n                setPanelClosedInStore\r\n            }\r\n        },\r\n    })\r\n</script>\r\n<style lang='scss' scoped>\r\n</style>\r\n","<template>\r\n    <div class=\"add-movie\">\r\n        <h2>Add Movie</h2>\r\n        <div class=\"p-fluid add-movie__panel\">\r\n            <div class=\"p-field add-movie__row\">\r\n                <label for=\"name\">Movie Name</label>\r\n                <div v-show=\"!searchReady\">Loading Search ...</div>\r\n                <AutoComplete\r\n                    id=\"name\"\r\n                    v-model=\"selectedMovie\"\r\n                    :suggestions=\"suggestions\"\r\n                    @complete=\"movieSearch($event)\"\r\n                    @item-select=\"movieSelected\"\r\n                    @clear=\"movieCleared\"\r\n                    field=\"name\"\r\n                    v-show=\"searchReady\"\r\n                    class=\"add-movie__field\"\r\n                    forceSelection\r\n                    dropdownMode=\"current\"\r\n                    :class=\"invalid ? 'p-invalid' : ''\"\r\n                >\r\n                    <template #item=\"slotProps\">\r\n                        <div>{{ slotProps.item.name }}</div>\r\n                    </template>\r\n                </AutoComplete>\r\n            </div>\r\n            <div class=\"p-field add-movie__row add-movie__poster\" v-show=\"itemSelected\">\r\n                <img\r\n                    :src=\"selectedMovie?.poster?.url\"\r\n                    class=\"add-movie__image\"\r\n                />\r\n            </div>\r\n            <div class=\"p-field add-movie__row\" v-show=\"itemSelected\">\r\n                <label for=\"rating\">Rating</label>\r\n                <Knob\r\n                    v-model=\"rating\"\r\n                    id=\"rating\"\r\n                    :size=\"150\"\r\n                    class=\"add-movie__rating\"\r\n                />\r\n            </div>\r\n            <div class=\"p-field add-movie__row\" v-show=\"itemSelected\">\r\n                <label for=\"year\">Year Seen</label>\r\n                <Dropdown\r\n                    class=\"add-movie__field\"\r\n                    id=\"year\"\r\n                    v-model=\"selectedYear\"\r\n                    :options=\"years\"\r\n                    placeholder=\"Select a year\"\r\n                />\r\n            </div>\r\n            <div class=\"p-field add-movie__row\" v-show=\"itemSelected\">\r\n                <Button\r\n                    :label=\"saving ? 'Saving' : 'Save'\"\r\n                    @click=\"save\"\r\n                    :disabled=\"saving\"\r\n                />\r\n            </div>\r\n        </div>\r\n    </div>\r\n</template>\r\n<script lang='ts'>\r\n    import { defineComponent, onMounted, ref } from 'vue'\r\n    import AutoComplete from 'primevue/autocomplete'\r\n    import AutoCompleteEvent from '@/models/prime-events'\r\n    import MovieSuggestion from '@/models/movie-search'\r\n    import Dropdown from 'primevue/dropdown'\r\n    import ChronicleConfig from '@/config'\r\n    import Button from 'primevue/button'\r\n    import { useStore } from 'vuex'\r\n    import { storeKey } from '@/store'\r\n    import 'firebase/database'\r\n    import ItemData from '@/models/item'\r\n    import Knob from 'primevue/knob'\r\n\r\n    export default defineComponent({\r\n        name: 'AddMovie',\r\n        components: {\r\n            AutoComplete,\r\n            Knob,\r\n            Dropdown,\r\n            Button,\r\n        },\r\n        emits: ['saved'],\r\n        setup(props, { emit }) {\r\n            const searchReady = ref(false)\r\n            const suggestions = ref<MovieSuggestion[]>([])\r\n            const selectedMovie = ref<MovieSuggestion>()\r\n            const rating = ref<number>(0)\r\n            const selectedYear = ref<number>()\r\n            const invalid = ref(false)\r\n            const saving = ref(false)\r\n            const store = useStore(storeKey)\r\n            const itemSelected = ref(false)\r\n\r\n            onMounted(async () => {\r\n                await store.dispatch('movies/loadConfiguration')\r\n                searchReady.value = true\r\n            })\r\n\r\n            const movieSelected = () => {\r\n                itemSelected.value = true\r\n            }\r\n\r\n            const movieCleared = () => {\r\n                itemSelected.value = false\r\n            }\r\n\r\n            const save = async () => {\r\n                invalid.value = selectedMovie.value === undefined\r\n\r\n                if (invalid.value) {\r\n                    return\r\n                }\r\n\r\n                const movie: ItemData = {\r\n                    name: selectedMovie.value?.name || '',\r\n                    posterUrl: selectedMovie.value?.poster?.url || '',\r\n                    poasterWidth: selectedMovie.value?.poster?.width || 0,\r\n                    myRating: rating.value || 0,\r\n                    globalRating: selectedMovie.value?.rating || 0,\r\n                    year: selectedYear.value || 0,\r\n                }\r\n\r\n                saving.value = true\r\n                await store.dispatch('movies/addItem', movie)\r\n                emit('saved')\r\n            }\r\n\r\n            const movieSearch = async (event: AutoCompleteEvent) => {\r\n                suggestions.value = await store.dispatch(\r\n                    'movies/loadSuggestions',\r\n                    event.query.trim()\r\n                )\r\n            }\r\n\r\n            return {\r\n                movieSearch,\r\n                searchReady,\r\n                selectedMovie,\r\n                suggestions,\r\n                rating,\r\n                selectedYear,\r\n                years: ChronicleConfig.Years(),\r\n                save,\r\n                invalid,\r\n                saving,\r\n                itemSelected,\r\n                movieSelected,\r\n                movieCleared\r\n            }\r\n        },\r\n    })\r\n</script>\r\n<style lang='scss' scoped>\r\n    .add-movie {\r\n        display: flex;\r\n        flex-direction: column;\r\n        align-items: center;\r\n        margin: auto;\r\n        width: 20em;\r\n\r\n        &__field {\r\n            margin-top: 0.5em;\r\n        }\r\n\r\n        &__row {\r\n            margin-top: 0.5em;\r\n        }\r\n\r\n        &__poster {\r\n            display: flex;\r\n            justify-content: center;\r\n            background: var(--surface-900);\r\n            border-radius: 1em;\r\n        }\r\n\r\n        &__image {\r\n            max-width: 20em;\r\n        }\r\n\r\n        &__panel {\r\n            width: 100%;\r\n        }\r\n\r\n        &__rating {\r\n            display: flex;\r\n            justify-content: center;\r\n        }\r\n    }\r\n</style>\r\n","\r\n    import { defineComponent, onMounted, ref } from 'vue'\r\n    import AutoComplete from 'primevue/autocomplete'\r\n    import AutoCompleteEvent from '@/models/prime-events'\r\n    import MovieSuggestion from '@/models/movie-search'\r\n    import Dropdown from 'primevue/dropdown'\r\n    import ChronicleConfig from '@/config'\r\n    import Button from 'primevue/button'\r\n    import { useStore } from 'vuex'\r\n    import { storeKey } from '@/store'\r\n    import 'firebase/database'\r\n    import ItemData from '@/models/item'\r\n    import Knob from 'primevue/knob'\r\n\r\n    export default defineComponent({\r\n        name: 'AddMovie',\r\n        components: {\r\n            AutoComplete,\r\n            Knob,\r\n            Dropdown,\r\n            Button,\r\n        },\r\n        emits: ['saved'],\r\n        setup(props, { emit }) {\r\n            const searchReady = ref(false)\r\n            const suggestions = ref<MovieSuggestion[]>([])\r\n            const selectedMovie = ref<MovieSuggestion>()\r\n            const rating = ref<number>(0)\r\n            const selectedYear = ref<number>()\r\n            const invalid = ref(false)\r\n            const saving = ref(false)\r\n            const store = useStore(storeKey)\r\n            const itemSelected = ref(false)\r\n\r\n            onMounted(async () => {\r\n                await store.dispatch('movies/loadConfiguration')\r\n                searchReady.value = true\r\n            })\r\n\r\n            const movieSelected = () => {\r\n                itemSelected.value = true\r\n            }\r\n\r\n            const movieCleared = () => {\r\n                itemSelected.value = false\r\n            }\r\n\r\n            const save = async () => {\r\n                invalid.value = selectedMovie.value === undefined\r\n\r\n                if (invalid.value) {\r\n                    return\r\n                }\r\n\r\n                const movie: ItemData = {\r\n                    name: selectedMovie.value?.name || '',\r\n                    posterUrl: selectedMovie.value?.poster?.url || '',\r\n                    poasterWidth: selectedMovie.value?.poster?.width || 0,\r\n                    myRating: rating.value || 0,\r\n                    globalRating: selectedMovie.value?.rating || 0,\r\n                    year: selectedYear.value || 0,\r\n                }\r\n\r\n                saving.value = true\r\n                await store.dispatch('movies/addItem', movie)\r\n                emit('saved')\r\n            }\r\n\r\n            const movieSearch = async (event: AutoCompleteEvent) => {\r\n                suggestions.value = await store.dispatch(\r\n                    'movies/loadSuggestions',\r\n                    event.query.trim()\r\n                )\r\n            }\r\n\r\n            return {\r\n                movieSearch,\r\n                searchReady,\r\n                selectedMovie,\r\n                suggestions,\r\n                rating,\r\n                selectedYear,\r\n                years: ChronicleConfig.Years(),\r\n                save,\r\n                invalid,\r\n                saving,\r\n                itemSelected,\r\n                movieSelected,\r\n                movieCleared\r\n            }\r\n        },\r\n    })\r\n","import { render } from \"./AddMovie.vue?vue&type=template&id=5dcea0ce&scoped=true\"\nimport script from \"./AddMovie.vue?vue&type=script&lang=ts\"\nexport * from \"./AddMovie.vue?vue&type=script&lang=ts\"\n\nimport \"./AddMovie.vue?vue&type=style&index=0&id=5dcea0ce&lang=scss&scoped=true\"\nscript.render = render\nscript.__scopeId = \"data-v-5dcea0ce\"\n\nexport default script","\r\n    import { defineComponent, provide, onMounted, watch, ref } from 'vue'\r\n    import { useStore } from 'vuex'\r\n    import { moduleKey, storeKey } from '@/store'\r\n    import Sidebar from 'primevue/sidebar'\r\n    import AddMovie from '@/components/AddMovie.vue'\r\n\r\n    export default defineComponent({\r\n        name: 'Movies',\r\n        components: {\r\n            Sidebar,\r\n            AddMovie\r\n        },\r\n        setup() {\r\n            const store = useStore(storeKey)\r\n            provide(moduleKey, 'movies')\r\n            const addIsOpen = ref(false)\r\n            onMounted(() => {\r\n                store.dispatch('movies/loadItems')\r\n            })\r\n\r\n            const setPanelClosedInStore = () => {\r\n                store.commit('ui/setAddPanelOpen', false)\r\n            }\r\n\r\n            const closeAddPanel = () => {\r\n                setPanelClosedInStore()\r\n            }\r\n\r\n            watch(() => store.state.ui.addPanelOpen, (current) => {\r\n                addIsOpen.value = current\r\n            })\r\n\r\n            return {\r\n                addIsOpen,\r\n                closeAddPanel,\r\n                setPanelClosedInStore\r\n            }\r\n        },\r\n    })\r\n","import { render } from \"./Movies.vue?vue&type=template&id=28457528\"\nimport script from \"./Movies.vue?vue&type=script&lang=ts\"\nexport * from \"./Movies.vue?vue&type=script&lang=ts\"\nscript.render = render\n\nexport default script","<template>\r\n    <router-view></router-view>\r\n    <Sidebar v-model:visible=\"addIsOpen\" position=\"full\" @hide=\"setPanelClosedInStore\">\r\n        <add-musical @saved=\"closeAddPanel\"></add-musical>\r\n    </Sidebar>\r\n</template>\r\n<script lang='ts'>\r\n    import { defineComponent, provide, onMounted, ref, watch } from 'vue'\r\n    import { useStore } from 'vuex'\r\n    import Sidebar from 'primevue/sidebar'\r\n    import AddMusical from '@/components/AddMusical.vue'\r\n    import { moduleKey, storeKey } from '@/store'\r\n    \r\n    export default defineComponent({\r\n        name: 'Musicals',\r\n        components: {\r\n            Sidebar,\r\n            AddMusical\r\n        },\r\n        setup() {\r\n            const addIsOpen = ref(false)\r\n            provide(moduleKey, 'musicals')\r\n            const store = useStore(storeKey)\r\n\r\n            onMounted(() => {\r\n                store.dispatch('musicals/loadItems')\r\n            })\r\n\r\n\r\n            watch(() => store.state.ui.addPanelOpen, (current) => {\r\n                addIsOpen.value = current\r\n            })\r\n\r\n            const setPanelClosedInStore = () => {\r\n                store.commit('ui/setAddPanelOpen', false)\r\n            }\r\n\r\n            const closeAddPanel = () => {\r\n                setPanelClosedInStore()\r\n            }\r\n            \r\n            return {\r\n                addIsOpen,\r\n                setPanelClosedInStore,\r\n                closeAddPanel\r\n            }\r\n        },\r\n    })\r\n</script>\r\n<style lang='scss' scoped>\r\n</style>\r\n","<template>\r\n    <div class=\"add-musical\">\r\n        <h2>Add Musical</h2>\r\n        <div class=\"p-fluid add-musical__panel\">\r\n            <div class=\"p-field add-musical__row\">\r\n                <label for=\"name\">Musical Name</label>\r\n                <AutoComplete\r\n                    id=\"name\"\r\n                    v-model=\"selectedMusical\"\r\n                    :suggestions=\"suggestions\"\r\n                    @complete=\"musicalSearch($event)\"\r\n                    @item-select=\"musicalSelected\"\r\n                    @clear=\"musicalCleared\"\r\n                    field=\"title\"\r\n                    class=\"add-musical__field\"\r\n                    forceSelection\r\n                    dropdownMode=\"current\"\r\n                    :class=\"invalid ? 'p-invalid' : ''\"\r\n                >\r\n                    <template #item=\"slotProps\">\r\n                        <div>{{ slotProps.item.title }}</div>\r\n                    </template>\r\n                </AutoComplete>\r\n            </div>\r\n            <div\r\n                class=\"p-field add-musical__row\"\r\n                v-html=\"selectedMusical?.description\"\r\n                v-show=\"itemSelected\"\r\n            ></div>\r\n            <div\r\n                class=\"p-field add-musical__row add-musical__poster\"\r\n                v-show=\"itemSelected\"\r\n            >\r\n                <img :src=\"poster?.source\" class=\"add-musical__image\" />\r\n            </div>\r\n            <div class=\"p-field add-musical__row\" v-show=\"itemSelected\">\r\n                <label for=\"rating\">Rating</label>\r\n                <Knob\r\n                    v-model=\"rating\"\r\n                    id=\"rating\"\r\n                    :size=\"150\"\r\n                    class=\"add-musical__rating\"\r\n                />\r\n            </div>\r\n            <div class=\"p-field add-musical__row\" v-show=\"itemSelected\">\r\n                <label for=\"year\">Year Seen</label>\r\n                <Dropdown\r\n                    class=\"add-musical__field\"\r\n                    id=\"year\"\r\n                    v-model=\"selectedYear\"\r\n                    :options=\"years\"\r\n                    placeholder=\"Select a year\"\r\n                />\r\n            </div>\r\n            <div class=\"p-field add-musical__row\" v-show=\"itemSelected\">\r\n                <Button\r\n                    :label=\"saving ? 'Saving' : 'Save'\"\r\n                    @click=\"save\"\r\n                    :disabled=\"saving\"\r\n                />\r\n            </div>\r\n        </div>\r\n    </div>\r\n</template>\r\n<script lang='ts'>\r\n    import { defineComponent, ref } from 'vue'\r\n    import AutoComplete from 'primevue/autocomplete'\r\n    import AutoCompleteEvent, { AutoCompleteEventSelectedEvent, } from '@/models/prime-events'\r\n    import Dropdown from 'primevue/dropdown'\r\n    import ChronicleConfig from '@/config'\r\n    import Button from 'primevue/button'\r\n    import { useStore } from 'vuex'\r\n    import { storeKey } from '@/store'\r\n    import 'firebase/database'\r\n    import { Thumbnail } from '@/models/musical-poster'\r\n    import MusicalSuggestion from '@/models/musical-search'\r\n    import Knob from 'primevue/knob'\r\n    import ItemData from '@/models/item'\r\n\r\n    export default defineComponent({\r\n        name: 'AddMusical',\r\n        components: {\r\n            AutoComplete,\r\n            Knob,\r\n            Dropdown,\r\n            Button,\r\n        },\r\n        emits: ['saved'],\r\n        setup(props, { emit }) {\r\n            const suggestions = ref<string[]>([])\r\n            const selectedMusical = ref<MusicalSuggestion>()\r\n            const rating = ref<number>(0)\r\n            const selectedYear = ref<number>()\r\n            const invalid = ref(false)\r\n            const saving = ref(false)\r\n            const itemSelected = ref(false)\r\n            const store = useStore(storeKey)\r\n            const poster = ref<Thumbnail>()\r\n\r\n            const musicalSelected = async (event: AutoCompleteEventSelectedEvent<MusicalSuggestion>) => {\r\n                itemSelected.value = true\r\n                poster.value = await store.dispatch(\r\n                    'musicals/loadPoster',\r\n                    event.value.title\r\n                )\r\n            }\r\n\r\n            const musicalCleared = () => {\r\n                itemSelected.value = false\r\n            }\r\n\r\n            const save = async () => {\r\n                invalid.value = selectedMusical.value === undefined\r\n\r\n                if (invalid.value) {\r\n                    return\r\n                }\r\n\r\n                const musical: ItemData = {\r\n                    name: selectedMusical.value?.title || '',\r\n                    posterUrl: poster.value?.source || '',\r\n                    poasterWidth: poster.value?.width || 0,\r\n                    myRating: rating.value || 0,\r\n                    globalRating: 0,\r\n                    year: selectedYear.value || 0,\r\n                }\r\n\r\n                saving.value = true\r\n                await store.dispatch('musicals/addItem', musical)\r\n                emit('saved')\r\n            }\r\n\r\n            const musicalSearch = async (event: AutoCompleteEvent) => {\r\n                suggestions.value = await store.dispatch(\r\n                    'musicals/loadSuggestions',\r\n                    event.query.trim()\r\n                )\r\n            }\r\n\r\n            return {\r\n                musicalSearch,\r\n                selectedMusical,\r\n                suggestions,\r\n                rating,\r\n                selectedYear,\r\n                years: ChronicleConfig.Years(),\r\n                save,\r\n                invalid,\r\n                saving,\r\n                poster,\r\n                musicalSelected,\r\n                itemSelected,\r\n                musicalCleared,\r\n            }\r\n        },\r\n    })\r\n</script>\r\n<style lang='scss' scoped>\r\n    .add-musical {\r\n        display: flex;\r\n        flex-direction: column;\r\n        align-items: center;\r\n        margin: auto;\r\n        width: 20em;\r\n\r\n        &__field {\r\n            margin-top: 0.5em;\r\n        }\r\n\r\n        &__row {\r\n            margin-top: 1em;\r\n        }\r\n\r\n        &__poster {\r\n            display: flex;\r\n            justify-content: center;\r\n            background: var(--surface-900);\r\n            border-radius: 1em;\r\n        }\r\n\r\n        &__image {\r\n            max-width: 20em;\r\n        }\r\n\r\n        &__panel {\r\n            width: 100%;\r\n        }\r\n\r\n        &__rating {\r\n            display: flex;\r\n            justify-content: center;\r\n        }\r\n    }\r\n</style>\r\n","\r\n    import { defineComponent, ref } from 'vue'\r\n    import AutoComplete from 'primevue/autocomplete'\r\n    import AutoCompleteEvent, { AutoCompleteEventSelectedEvent, } from '@/models/prime-events'\r\n    import Dropdown from 'primevue/dropdown'\r\n    import ChronicleConfig from '@/config'\r\n    import Button from 'primevue/button'\r\n    import { useStore } from 'vuex'\r\n    import { storeKey } from '@/store'\r\n    import 'firebase/database'\r\n    import { Thumbnail } from '@/models/musical-poster'\r\n    import MusicalSuggestion from '@/models/musical-search'\r\n    import Knob from 'primevue/knob'\r\n    import ItemData from '@/models/item'\r\n\r\n    export default defineComponent({\r\n        name: 'AddMusical',\r\n        components: {\r\n            AutoComplete,\r\n            Knob,\r\n            Dropdown,\r\n            Button,\r\n        },\r\n        emits: ['saved'],\r\n        setup(props, { emit }) {\r\n            const suggestions = ref<string[]>([])\r\n            const selectedMusical = ref<MusicalSuggestion>()\r\n            const rating = ref<number>(0)\r\n            const selectedYear = ref<number>()\r\n            const invalid = ref(false)\r\n            const saving = ref(false)\r\n            const itemSelected = ref(false)\r\n            const store = useStore(storeKey)\r\n            const poster = ref<Thumbnail>()\r\n\r\n            const musicalSelected = async (event: AutoCompleteEventSelectedEvent<MusicalSuggestion>) => {\r\n                itemSelected.value = true\r\n                poster.value = await store.dispatch(\r\n                    'musicals/loadPoster',\r\n                    event.value.title\r\n                )\r\n            }\r\n\r\n            const musicalCleared = () => {\r\n                itemSelected.value = false\r\n            }\r\n\r\n            const save = async () => {\r\n                invalid.value = selectedMusical.value === undefined\r\n\r\n                if (invalid.value) {\r\n                    return\r\n                }\r\n\r\n                const musical: ItemData = {\r\n                    name: selectedMusical.value?.title || '',\r\n                    posterUrl: poster.value?.source || '',\r\n                    poasterWidth: poster.value?.width || 0,\r\n                    myRating: rating.value || 0,\r\n                    globalRating: 0,\r\n                    year: selectedYear.value || 0,\r\n                }\r\n\r\n                saving.value = true\r\n                await store.dispatch('musicals/addItem', musical)\r\n                emit('saved')\r\n            }\r\n\r\n            const musicalSearch = async (event: AutoCompleteEvent) => {\r\n                suggestions.value = await store.dispatch(\r\n                    'musicals/loadSuggestions',\r\n                    event.query.trim()\r\n                )\r\n            }\r\n\r\n            return {\r\n                musicalSearch,\r\n                selectedMusical,\r\n                suggestions,\r\n                rating,\r\n                selectedYear,\r\n                years: ChronicleConfig.Years(),\r\n                save,\r\n                invalid,\r\n                saving,\r\n                poster,\r\n                musicalSelected,\r\n                itemSelected,\r\n                musicalCleared,\r\n            }\r\n        },\r\n    })\r\n","import { render } from \"./AddMusical.vue?vue&type=template&id=1f3c1ce6&scoped=true\"\nimport script from \"./AddMusical.vue?vue&type=script&lang=ts\"\nexport * from \"./AddMusical.vue?vue&type=script&lang=ts\"\n\nimport \"./AddMusical.vue?vue&type=style&index=0&id=1f3c1ce6&lang=scss&scoped=true\"\nscript.render = render\nscript.__scopeId = \"data-v-1f3c1ce6\"\n\nexport default script","\r\n    import { defineComponent, provide, onMounted, ref, watch } from 'vue'\r\n    import { useStore } from 'vuex'\r\n    import Sidebar from 'primevue/sidebar'\r\n    import AddMusical from '@/components/AddMusical.vue'\r\n    import { moduleKey, storeKey } from '@/store'\r\n    \r\n    export default defineComponent({\r\n        name: 'Musicals',\r\n        components: {\r\n            Sidebar,\r\n            AddMusical\r\n        },\r\n        setup() {\r\n            const addIsOpen = ref(false)\r\n            provide(moduleKey, 'musicals')\r\n            const store = useStore(storeKey)\r\n\r\n            onMounted(() => {\r\n                store.dispatch('musicals/loadItems')\r\n            })\r\n\r\n\r\n            watch(() => store.state.ui.addPanelOpen, (current) => {\r\n                addIsOpen.value = current\r\n            })\r\n\r\n            const setPanelClosedInStore = () => {\r\n                store.commit('ui/setAddPanelOpen', false)\r\n            }\r\n\r\n            const closeAddPanel = () => {\r\n                setPanelClosedInStore()\r\n            }\r\n            \r\n            return {\r\n                addIsOpen,\r\n                setPanelClosedInStore,\r\n                closeAddPanel\r\n            }\r\n        },\r\n    })\r\n","import { render } from \"./Musicals.vue?vue&type=template&id=4853bd76\"\nimport script from \"./Musicals.vue?vue&type=script&lang=ts\"\nexport * from \"./Musicals.vue?vue&type=script&lang=ts\"\nscript.render = render\n\nexport default script","<template>\r\n    <div class=\"col-fixed\" v-for=\"(data, key) in items\" :key=\"key\">\r\n        <item :data=\"data\" :editKey=\"key\"></item>\r\n    </div>\r\n</template>\r\n<script lang='ts'>\r\n    import { computed, defineComponent, inject } from 'vue'\r\n    import { useStore } from 'vuex'\r\n    import { moduleKey, storeKey } from '@/store'\r\n    import Item from '@/components/Item.vue'\r\n\r\n    export default defineComponent({\r\n        name: 'ItemsList',\r\n        components: {\r\n            Item\r\n        },\r\n        props: {\r\n            getter: {\r\n                type: String,\r\n                required: true,\r\n            },\r\n        },\r\n        setup(props) {\r\n            const module = inject(moduleKey)\r\n            const store = useStore(storeKey)\r\n            // This might be being too clever but there's several ways of doing this.\r\n            const items = computed(() => store.getters[`${module}/${props.getter}`])\r\n\r\n            return {\r\n                items,\r\n            }\r\n        },\r\n    })\r\n</script>\r\n<style lang='scss' scoped>\r\n</style>\r\n\r\n","<template>\r\n    <Card class=\"item\">\r\n        <template #header>\r\n            <div class=\"item__header\">\r\n                <img\r\n                    alt=\"Poster\"\r\n                    :src=\"data.posterUrl\"\r\n                />\r\n            </div>\r\n        </template>\r\n        <template #title> {{ data.name }} </template>\r\n        <template #content>\r\n            <div class=\"item__content\">\r\n                <ProgressBar\r\n                    class=\"item__rating\"\r\n                    v-if=\"data.myRating\"\r\n                    :value=\"data.myRating\"\r\n                    :showValue=\"true\"\r\n                    title=\"My Rating\"\r\n                />\r\n                <ProgressBar\r\n                    class=\"item__rating\"\r\n                    v-if=\"data.myRating && data.globalRating\"\r\n                    :value=\"data.globalRating\"\r\n                    :showValue=\"true\"\r\n                    title=\"Global Rating\"\r\n                />\r\n\r\n                <Knob\r\n                    v-model=\"rating\"\r\n                    v-if=\"isEditing\"\r\n                    :size=\"150\"\r\n                    class=\"item_rating\"\r\n                />\r\n\r\n                <Button\r\n                    class=\"item__edit\"\r\n                    v-if=\"!data.year\"\r\n                    :label=\"isEditing ? 'Save' : 'Edit'\"\r\n                    @click=\"edit\"\r\n                ></Button>\r\n                <Dropdown\r\n                    v-model=\"selectedYear\"\r\n                    :options=\"years\"\r\n                    class=\"item__year\"\r\n                    placeholder=\"Select a year\"\r\n                    v-if=\"isEditing\"\r\n                />\r\n            </div>\r\n        </template>\r\n        <template #footer>\r\n            {{ data.year || '' }}\r\n        </template>\r\n    </Card>\r\n</template>\r\n<script lang='ts'>\r\n    import { defineComponent, inject, PropType, ref } from 'vue'\r\n    import Card from 'primevue/card'\r\n    import Dropdown from 'primevue/dropdown'\r\n    import ItemData from '@/models/item'\r\n    import ChronicleConfig from '@/config'\r\n    import Button from 'primevue/button'\r\n    import { useStore } from 'vuex'\r\n    import { moduleKey, storeKey } from '@/store'\r\n    import Knob from 'primevue/knob'\r\n    import ProgressBar from 'primevue/progressbar'\r\n\r\n    export default defineComponent({\r\n        name: 'Item',\r\n        components: {\r\n            Knob,\r\n            Button,\r\n            Card,\r\n            Dropdown,\r\n            ProgressBar\r\n        },\r\n        props: {\r\n            data: {\r\n                type: Object as PropType<ItemData>,\r\n                require: true,\r\n            },\r\n\r\n            editKey: {\r\n                type: String,\r\n                required: true,\r\n            },\r\n        },\r\n        setup(props) {\r\n            const isEditing = ref(false)\r\n            const selectedYear = ref<number>(new Date().getUTCFullYear())\r\n            const rating = ref<number>(0)\r\n            const store = useStore(storeKey)\r\n            const module = inject(moduleKey)\r\n\r\n            const edit = async () => {\r\n                if (!isEditing.value) {\r\n                    isEditing.value = true\r\n                } else {\r\n                    // Save\r\n                    const item = { ...props.data }\r\n                    item.myRating = rating.value\r\n                    item.year = selectedYear.value\r\n                    await store.dispatch(`${module}/updateItem`, { item, key: props.editKey })\r\n                    isEditing.value = false\r\n                }\r\n            }\r\n\r\n            return {\r\n                isEditing,\r\n                selectedYear,\r\n                rating,\r\n                years: ChronicleConfig.Years(),\r\n                edit\r\n            }\r\n        },\r\n    })\r\n</script>\r\n<style lang='scss' scoped>\r\n    .item {\r\n        width: 12em;\r\n        margin: 0.5em;\r\n\r\n        &__rating-slider {\r\n            height: 18em;\r\n        }\r\n\r\n        &__header {\r\n            display: flex;\r\n            justify-content: center;\r\n        }\r\n\r\n        &__edit {\r\n            width: 100%;\r\n        }\r\n\r\n        &__rating {\r\n            border-radius: 0;\r\n            background-color: var(--surface-card);\r\n        }\r\n\r\n        &__year {\r\n            width: 100%;\r\n            margin-top: 0.5em;\r\n        }\r\n\r\n        &__content {\r\n            margin-bottom: -1em;\r\n        }\r\n    }\r\n</style>\r\n","\r\n    import { defineComponent, inject, PropType, ref } from 'vue'\r\n    import Card from 'primevue/card'\r\n    import Dropdown from 'primevue/dropdown'\r\n    import ItemData from '@/models/item'\r\n    import ChronicleConfig from '@/config'\r\n    import Button from 'primevue/button'\r\n    import { useStore } from 'vuex'\r\n    import { moduleKey, storeKey } from '@/store'\r\n    import Knob from 'primevue/knob'\r\n    import ProgressBar from 'primevue/progressbar'\r\n\r\n    export default defineComponent({\r\n        name: 'Item',\r\n        components: {\r\n            Knob,\r\n            Button,\r\n            Card,\r\n            Dropdown,\r\n            ProgressBar\r\n        },\r\n        props: {\r\n            data: {\r\n                type: Object as PropType<ItemData>,\r\n                require: true,\r\n            },\r\n\r\n            editKey: {\r\n                type: String,\r\n                required: true,\r\n            },\r\n        },\r\n        setup(props) {\r\n            const isEditing = ref(false)\r\n            const selectedYear = ref<number>(new Date().getUTCFullYear())\r\n            const rating = ref<number>(0)\r\n            const store = useStore(storeKey)\r\n            const module = inject(moduleKey)\r\n\r\n            const edit = async () => {\r\n                if (!isEditing.value) {\r\n                    isEditing.value = true\r\n                } else {\r\n                    // Save\r\n                    const item = { ...props.data }\r\n                    item.myRating = rating.value\r\n                    item.year = selectedYear.value\r\n                    await store.dispatch(`${module}/updateItem`, { item, key: props.editKey })\r\n                    isEditing.value = false\r\n                }\r\n            }\r\n\r\n            return {\r\n                isEditing,\r\n                selectedYear,\r\n                rating,\r\n                years: ChronicleConfig.Years(),\r\n                edit\r\n            }\r\n        },\r\n    })\r\n","import { render } from \"./Item.vue?vue&type=template&id=14f213e3&scoped=true\"\nimport script from \"./Item.vue?vue&type=script&lang=ts\"\nexport * from \"./Item.vue?vue&type=script&lang=ts\"\n\nimport \"./Item.vue?vue&type=style&index=0&id=14f213e3&lang=scss&scoped=true\"\nscript.render = render\nscript.__scopeId = \"data-v-14f213e3\"\n\nexport default script","\r\n    import { computed, defineComponent, inject } from 'vue'\r\n    import { useStore } from 'vuex'\r\n    import { moduleKey, storeKey } from '@/store'\r\n    import Item from '@/components/Item.vue'\r\n\r\n    export default defineComponent({\r\n        name: 'ItemsList',\r\n        components: {\r\n            Item\r\n        },\r\n        props: {\r\n            getter: {\r\n                type: String,\r\n                required: true,\r\n            },\r\n        },\r\n        setup(props) {\r\n            const module = inject(moduleKey)\r\n            const store = useStore(storeKey)\r\n            // This might be being too clever but there's several ways of doing this.\r\n            const items = computed(() => store.getters[`${module}/${props.getter}`])\r\n\r\n            return {\r\n                items,\r\n            }\r\n        },\r\n    })\r\n","import { render } from \"./ItemsList.vue?vue&type=template&id=61676628\"\nimport script from \"./ItemsList.vue?vue&type=script&lang=ts\"\nexport * from \"./ItemsList.vue?vue&type=script&lang=ts\"\nscript.render = render\n\nexport default script","import { createRouter, createWebHashHistory, RouteRecordRaw } from 'vue-router'\nimport Login from '../views/Login.vue'\nimport Movies from '../views/Movies.vue'\nimport Musicals from '../views/Musicals.vue'\nimport { store } from '@/store'\nimport ItemsList from '@/components/ItemsList.vue'\n\nconst routes: Array<RouteRecordRaw> = [\n    {\n        path: '/',\n        name: 'Login',\n        component: Login\n    },\n    {\n        path: '/movies/',\n        name: 'Movies',\n        component: Movies,\n        meta: {\n            requiresAuth: true\n        },\n        children: [\n            {\n                path:'history',\n                name: 'Movie History',\n                component: ItemsList,\n                props: {\n                    getter: 'getRatedItems'\n                }\n            },\n            {\n                path: 'watch',\n                name: 'Movie Watch List',\n                component: ItemsList,\n                props: {\n                    getter: 'getUnratedItems'\n                }\n            }\n        ]\n    },\n    {\n        path: '/musicals/',\n        name: 'Musicals',\n        component: Musicals,\n        meta: {\n            requiresAuth: true\n        },\n        children: [\n            {\n                path: 'history',\n                name: 'Musical History',\n                component: ItemsList,\n                props: {\n                    getter: 'getRatedItems'\n                }\n            },\n            {\n                path: 'listen',\n                name: 'Musical Listen List',\n                component: ItemsList,\n                props: {\n                    getter: 'getUnratedItems'\n                }\n            },\n        ]\n    }\n]\n\nconst router = createRouter({\n    history: createWebHashHistory(),\n    routes\n})\n\n// Not sure if this is the best way to do a global auth guard\n// but it's the only one I can find that works with type script\n// and the composition api\nrouter.beforeEach((to, from, next) => {\n    const requiresAuth = to.matched.some(r => r.meta?.requiresAuth)\n    if (requiresAuth && !store.state.auth.user) {\n        router.push('/')\n    } else {\n        next()\n    }\n})\n\nexport default router\n","import { createApp } from 'vue'\r\nimport App from './App.vue'\r\nimport router from './router'\r\nimport { store, storeKey } from './store'\r\nimport PrimeVue from 'primevue/config'\r\nimport ToastService from 'primevue/toastservice'\r\nimport Tooltip from 'primevue/tooltip'\r\nimport firebase from 'firebase/app'\r\nimport 'firebase/auth'\r\nimport 'firebase/database'\r\n\r\nimport 'primevue/resources/themes/saga-orange/theme.css'\r\nimport 'primevue/resources/primevue.min.css'\r\nimport 'primeicons/primeicons.css'\r\nimport 'primeflex/primeflex.css'\r\nimport ChronicleConfig from './config'\r\n\r\nfirebase.initializeApp(ChronicleConfig.FirebaseConfig)\r\n\r\ncreateApp(App)\r\n    .use(store, storeKey)\r\n    .use(router)\r\n    .use(PrimeVue)\r\n    .use(ToastService)\r\n    .directive('tooltip', Tooltip)\r\n    .mount('#app')\r\n","export * from \"-!../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--8-oneOf-1-0!../../node_modules/css-loader/dist/cjs.js??ref--8-oneOf-1-1!../../node_modules/vue-loader-v16/dist/stylePostLoader.js!../../node_modules/postcss-loader/src/index.js??ref--8-oneOf-1-2!../../node_modules/sass-loader/dist/cjs.js??ref--8-oneOf-1-3!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader-v16/dist/index.js??ref--0-1!./AddMusical.vue?vue&type=style&index=0&id=1f3c1ce6&lang=scss&scoped=true\"","export * from \"-!../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--8-oneOf-1-0!../../node_modules/css-loader/dist/cjs.js??ref--8-oneOf-1-1!../../node_modules/vue-loader-v16/dist/stylePostLoader.js!../../node_modules/postcss-loader/src/index.js??ref--8-oneOf-1-2!../../node_modules/sass-loader/dist/cjs.js??ref--8-oneOf-1-3!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader-v16/dist/index.js??ref--0-1!./Item.vue?vue&type=style&index=0&id=14f213e3&lang=scss&scoped=true\"","export * from \"-!../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--8-oneOf-1-0!../../node_modules/css-loader/dist/cjs.js??ref--8-oneOf-1-1!../../node_modules/vue-loader-v16/dist/stylePostLoader.js!../../node_modules/postcss-loader/src/index.js??ref--8-oneOf-1-2!../../node_modules/sass-loader/dist/cjs.js??ref--8-oneOf-1-3!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader-v16/dist/index.js??ref--0-1!./NavBar.vue?vue&type=style&index=0&id=00f7ffbe&lang=scss&scoped=true\""],"sourceRoot":""}